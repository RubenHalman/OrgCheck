<apex:page >
    <apex:composition template="OrgCheck_PageTemplate_VFT">
        <apex:define name="html_additional_scripttags" />
        <apex:define name="text_page_title">
            {!$Label.OrgCheck_Automations_Title_CL}
        </apex:define>
        <apex:define name="text_page_subtitle">
            {!$Label.OrgCheck_Automations_Subtitle_CL}
        </apex:define>
        <apex:define name="text_page_description">
            <apex:outputText escape="false" value="{!$Label.OrgCheck_Automations_Description_CL}" />
        </apex:define>
        <apex:define name="html_content_core">
            <div class="slds-tabs_default">
                <ul class="slds-tabs_default__nav" role="tablist">
                    <li class="slds-tabs_default__item slds-is-active" title="Workflows" role="presentation">
                        <a class="slds-tabs_default__link" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-default-workflows" id="tab-default-workflows__item">Workflows</a>
                    </li>
                    <li class="slds-tabs_default__item" title="Process builders" role="presentation">
                        <a class="slds-tabs_default__link" href="javascript:void(0);" role="tab" tabindex="1" aria-controls="tab-default-processbuilders" id="tab-default-processbuilders__item">Process Builders</a>
                    </li>
                    <li class="slds-tabs_default__item" title="Flows" role="presentation">
                        <a class="slds-tabs_default__link" href="javascript:void(0);" role="tab" tabindex="2" aria-controls="tab-default-flows" id="tab-default-flows__item">Flows</a>
                    </li>
                </ul>
                <div id="tab-default-workflows" class="slds-tabs_default__content slds-show" role="tabpanel" aria-labelledby="tab-default-workflows__item">
                    <div id="datatable-workflows" />
                </div>
                <div id="tab-default-processbuilders" class="slds-tabs_default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-processbuilders__item">
                    <div id="datatable-processbuilders" />
                </div>
                <div id="tab-default-flows" class="slds-tabs_default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-flows__item">
                    <div id="datatable-flows" />
                </div>
            </div>
        </apex:define>
        <apex:define name="html_start_definition_script">
            <script>
                function start2(controller, helper) {

                    // Initialize TABS bindings
                    helper.html.tabs.initialize('slds-tabs_default__item', 'slds-tabs_default__content', 'slds-button');

                    // =================================
                    // RUN CONTROLLER
                    // =================================
                    controller.run({
                        datasets: [ 'workflows', 'flows' ],
                        dependencies: false,
                        onRecords: function(map) { 

                            helper.html.datatable.create({
                                element: 'datatable-workflows',
                                appendCountInElement: 'tab-default-workflows__item',
                                columns: [
                                    { name: '{!JSENCODE($Label.OrgCheck_Name_CL)}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', type: 'numeric', property: '##score##' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Description_CL)}', 
                                        formula: (r) => {
                                            if (r.description) return helper.html.render.escape(r.description);
                                            return '{!JSENCODE($Label.OrgCheck_SetADescription_CL)}';
                                        },
                                        scoreFormula: (r) => { 
                                            if (!r.description) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_IsActive_CL)}', property: 'isActive', 
                                        formula: (r) => { 
                                            return helper.html.render.checkbox(r.isActive); 
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.isActive === false) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_Actions_CL)}', 
                                        formula: (r) => { 
                                            if (r.noAction === true) {
                                                return 'No direct action!<br />';
                                            }
                                            let html = '';
                                            r.actions.forEach(
                                                a => html += 
                                                    'Direct action: ' + helper.html.render.escape(a.name) +
                                                        ' (' + helper.html.render.escape(a.type) + ')<br />'
                                            ); 
                                            r.futureActions.forEach(
                                                tt => tt.actions.forEach(
                                                    a => html += 
                                                        'Future action: ' + helper.html.render.escape(a.name) +
                                                            ' (' + helper.html.render.escape(a.type) + ')<br />'
                                                )
                                            );
                                            return html;
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.noAction === true) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_CreatedDate_CL)}', type: 'datetime', property: 'createdDate' },
                                    { name: '{!JSENCODE($Label.OrgCheck_ModifiedDate_CL)}', type: 'datetime', property: 'lastModifiedDate' }                                    
                                ],
                                data: map.workflows,
                                sorting: { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', order: 'desc' },
                                showSearch: true,
                                showStatistics: true,
                                showLineCount: true
                            });

                            helper.html.datatable.create({
                                element: 'datatable-processbuilders',
                                appendCountInElement: 'tab-default-processbuilders__item',
                                columns: [
                                    { name: '{!JSENCODE($Label.OrgCheck_Flow_CL)}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.definitionId, 
                                            helper.html.render.escape(r.definitionName)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_FlowVersion_CL)}', type: 'numeric', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Version_CL)}', type: 'numeric', property: 'version' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', type: 'numeric', property: '##score##' },
                                    { name: '{!JSENCODE($Label.OrgCheck_IsActive_CL)}', property: 'isActive', 
                                        formula: (r) => { 
                                            return helper.html.render.checkbox(r.isActive); 
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.isActive === false) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_Object_CL)}', property: 'sobject' },
                                    { name: 'Trigger', property: 'triggerType' },
                                    { name: '{!JSENCODE($Label.OrgCheck_DmlCreates_CL)}', property: 'dmlCreates' },
                                    { name: '{!JSENCODE($Label.OrgCheck_DmlDeletes_CL)}', property: 'dmlDeletes' },
                                    { name: '{!JSENCODE($Label.OrgCheck_DmlUpdates_CL)}', property: 'dmlUpdates' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Description_CL)}', 
                                        formula: (r) => {
                                            if (r.description) return helper.html.render.escape(r.description);
                                            return '{!JSENCODE($Label.OrgCheck_SetADescription_CL)}';
                                        },
                                        scoreFormula: (r) => { 
                                            if (!r.description) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_CreatedDate_CL)}', type: 'datetime', property: 'createdDate' },
                                    { name: '{!JSENCODE($Label.OrgCheck_ModifiedDate_CL)}', type: 'datetime', property: 'lastModifiedDate' }                                    
                                ],
                                data: map.flows,
                                sorting: { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', order: 'desc' },
                                filtering: { formula: (r) => { return r.type === 'Workflow' }},
                                showSearch: true,
                                showStatistics: true,
                                showLineCount: true
                            });

                            helper.html.datatable.create({
                                element: 'datatable-flows',
                                appendCountInElement: 'tab-default-flows__item',
                                columns: [
                                    { name: '{!JSENCODE($Label.OrgCheck_Flow_CL)}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.definitionId, 
                                            helper.html.render.escape(r.definitionName)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_FlowVersion_CL)}', type: 'numeric', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Version_CL)}', type: 'numeric', property: 'version' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', type: 'numeric', property: '##score##' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Type_CL)}', property: 'type' }, 
                                    { name: '{!JSENCODE($Label.OrgCheck_IsActive_CL)}', property: 'isActive', 
                                        formula: (r) => { 
                                            return helper.html.render.checkbox(r.isActive); 
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.isActive === false) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_Description_CL)}', 
                                        formula: (r) => {
                                            if (r.description) return helper.html.render.escape(r.description);
                                            return '{!JSENCODE($Label.OrgCheck_SetADescription_CL)}';
                                        },
                                        scoreFormula: (r) => { 
                                            if (!r.description) return 1; 
                                        }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_CreatedDate_CL)}', type: 'datetime', property: 'createdDate' },
                                    { name: '{!JSENCODE($Label.OrgCheck_ModifiedDate_CL)}', type: 'datetime', property: 'lastModifiedDate' }                                    
                                ],
                                data: map.flows,
                                sorting: { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', order: 'desc' },
                                filtering: { formula: (r) => { return r.type !== 'Workflow' }},
                                showSearch: true,
                                showStatistics: true,
                                showLineCount: true
                            });
                        },
                        actions: { 
                            clearCache: { 
                                show: true 
                            }
                        }
                    });
                }
            </script>
        </apex:define>
    </apex:composition>
</apex:page>