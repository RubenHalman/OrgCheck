<apex:page >
    <apex:composition template="OrgCheck_PageTemplate_VFT">
        <apex:define name="html_additional_scripttags" />
        <apex:define name="text_page_icon">üéÅ</apex:define> 
        <apex:define name="text_page_title">{!$Label.OrgCheck_CustomLabels_Title_CL}</apex:define>
        <apex:define name="text_page_subtitle">{!$Label.OrgCheck_CustomLabels_Subtitle_CL}</apex:define>
        <apex:define name="text_page_description">
            <apex:outputText escape="false" value="{!$Label.OrgCheck_CustomLabels_Description_CL}" />
        </apex:define>
        <apex:define name="html_actions">
        </apex:define>
        <apex:define name="html_content_core">
            <div id="datatable" />
        </apex:define>
        <apex:define name="html_start_definition_script">
            <script>
                function start2(controller, helper) {
                    controller.run({
                        datasets: [ 'customLabels', 'flows' ],
                        dependencies: true,
                        onRecords: function(map) { 

                            helper.html.datatable.create({
                                element: 'datatable',
                                preprocessing: (r) => {
                                    const usedBy = helper.html.render.whereIsItUsedBy(
                                        r.id, 
                                        ['ApexClass', 'Flow'], 
                                        map.dependencies[r.id]
                                    );
                                    return {
                                        count_whereIsItUsed: helper.html.render.whereIsItUsed(r.id, map.dependencies[r.id]),
                                        count_whatIsItUsing: helper.html.render.whatIsItUsing(r.id, map.dependencies[r.id]),
                                        count_usedInApexClass: usedBy['ApexClass'],
                                        count_usedInFlow: usedBy['Flow']
                                    }
                                },
                                columns: [
                                    { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', type: 'numeric', property: '##score##' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Name_CL)}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Package_CL)}', property: 'namespace' },
                                    { name: 'Master Label', property: 'masterLabel' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Category_CL)}', property: 'category' },
                                    { name: 'IsProtected', property: 'protected' },
                                    { name: 'Language', property: 'language' },
                                    { name: '{!JSENCODE($Label.OrgCheck_Value_CL)}', formula: (r) => { 
                                        return helper.html.render.escape(helper.html.render.shrinkText(r.value, 100)); 
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Using_CL)}', type: 'numeric', formula: (r, pr) => { 
                                        if (pr.count_whatIsItUsing > 0) return helper.html.render.checkbox(true) + ' ' + pr.count_whatIsItUsing;
                                        return helper.html.render.checkbox(false);
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_UsedIn_CL)}', type: 'numeric', formula: (r, pr) => { 
                                            if (pr.count_whereIsItUsed > 0) return helper.html.render.checkbox(true) + ' ' + pr.count_whereIsItUsed;
                                            return helper.html.render.checkbox(false) + ' Not used!';
                                        },
                                        scoreFormula: (r, pr) => { if (pr.count_whereIsItUsed === 0) return 1; }
                                    },
                                    { name: '{!JSENCODE($Label.OrgCheck_UsedInApClass_CL)}', type: 'numeric', formula: (r, pr) => { 
                                        if (pr.count_usedInApexClass > 0) return helper.html.render.checkbox(true) + ' ' + pr.count_usedInApexClass + ' Apex Class' + (pr.count_usedInApexClass>1?'es':'');
                                        return helper.html.render.checkbox(false);
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_UsedInFlow_CL)}', type: 'numeric', formula: (r, pr) => { 
                                        if (pr.count_usedInFlow > 0) return helper.html.render.checkbox(true) + ' ' + pr.count_usedInFlow + ' Flow' + (pr.count_usedInFlow>1?'s':'');
                                        return helper.html.render.checkbox(false);
                                    }},
                                    { name: '{!JSENCODE($Label.OrgCheck_Dependencies_CL)}', 
                                        formula: (r) => { 
                                            const dep = map.dependencies[r.id]; 
                                            if (dep) return helper.html.render.dependencies(r.id, r.name, dep);
                                            return '{!JSENCODE($Label.OrgCheck_NoDependency_CL)}';
                                        }
                                    }
                                ],
                                data: map.customLabels,
                                sorting: { name: '{!JSENCODE($Label.OrgCheck_Score_CL)}', order: 'desc' },
                                showSearch: true,
                                showStatistics: true,
                                showLineCount: true,
                                stickyHeaders: true
                            });                            
                        },
                        actions: {  
                            exportTable: [{
                                table: 'datatable',
                                filename: 'CustomLabels'
                            }],
                            clearCache: { 
                                show: true 
                            }
                        }
                    });
                }
            </script>
        </apex:define>
    </apex:composition>
</apex:page>