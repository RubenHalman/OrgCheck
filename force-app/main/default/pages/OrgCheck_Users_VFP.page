<apex:page >
    <apex:composition template="OrgCheck_PageTemplate_VFT">
        <apex:define name="text_page_title">
            {!$Label.OrgCheck_Users_Title_CL}
        </apex:define>
        <apex:define name="text_page_subtitle">
            {!$Label.OrgCheck_Users_Subtitle_CL}
        </apex:define>
        <apex:define name="text_page_description">
            <apex:outputText escape="false" value="{!$Label.OrgCheck_Users_Description_CL}" />
        </apex:define>
        <apex:define name="html_actions">
        </apex:define>
        <apex:define name="html_content_core">
            <div id="datatable" />
        </apex:define>
        <apex:define name="html_start_definition_script">
            <script>
                function start2(controller, helper) {

                    controller.run({
                        datasets: [ 'users' ],
                        onRecords: function(map) { 

                            helper.html.datatable.create({
                                element: 'datatable',
                                columns: [
                                    { name: '{!$Label.OrgCheck_UserName_CL}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            '<img src="' + helper.html.render.escape(r.photourl) + '" width="25" /> ' + 
                                                helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: '{!$Label.OrgCheck_Score_CL}', type: 'numeric', property: '##score##' },
                                    { name: '{!$Label.OrgCheck_LastLogin_CL}', 
                                        formula: (r) => { 
                                            return (r.neverLogged === false) ? r.lastLogin : '{!$Label.OrgCheck_NeverLoggedIn_CL}'; 
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.neverLogged === true) return 1;
                                        }
                                    },
                                    { name: '{!$Label.OrgCheck_FailedLogins_CL}', type: 'numeric', property: 'numberFailedLogins' },
                                    { name: '{!$Label.OrgCheck_PasswordChange_CL}', property: 'lastPasswordChange' },
                                    { name: '{!$Label.OrgCheck_WhichUI_CL}', 
                                        formula: (r) => { 
                                            return (r.onLightningExperience === true) ? '{!$Label.OrgCheck_LexUI_CL}' : '{!$Label.OrgCheck_ClassicUI_CL}';
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.onLightningExperience === false) return 1;
                                        }
                                    },
                                    { name: '{!$Label.OrgCheck_KeyPermissions_CL}', formula: (r) => {
                                        let html = '';
                                        if (r.permissions.apiEnabled) html += '{!$Label.OrgCheck_APIEnabled_CL}<br />';
                                        if (r.permissions.viewSetup) html += '{!$Label.OrgCheck_ViewSetup_CL}<br />';
                                        if (r.permissions.modifyAllData) html += '{!$Label.OrgCheck_ModifyAllData_CL}<br />';
                                        if (r.permissions.viewAllData) html += '{!$Label.OrgCheck_ViewAllData_CL}<br />';
                                        return html;
                                    }},
                                    { name: '{!$Label.OrgCheck_Profile_CL}', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.profile.id, 
                                            helper.html.render.escape(r.profile.name)
                                        );
                                    }},
                                    { name: '{!$Label.OrgCheck_PermissionSetNames_CL}', formula: (r) => {
                                        let html = '';
                                        r.permissionSets.forEach(
                                            ps => html += helper.html.render.link(
                                                '/'+ps.id, 
                                                helper.html.render.escape(ps.name)
                                            ) + '<br />'
                                        );
                                        return html;
                                    }},
                                    { name: 'Exp. cert.', formula: (r) => {
                                        if (r.permissions.viewSetup === true && r.permissions.modifyAllData === true) return 'yes';
                                        return 'no';
                                    }}
                                ],
                                data: map.users,
                                sorting: { name: '{!$Label.OrgCheck_Score_CL}', order: 'desc' },
                                showSearch: true,
                                showStatistics: true,
                                showLineCount: true
                            });
                        },
                        actions: { 
                            exportTable: [{
                                table: 'datatable',
                                filename: 'Users'
                            }],
                            clearCache: { 
                                show: true 
                            }
                        }
                    });
                }
            </script>
        </apex:define>
    </apex:composition>
</apex:page>