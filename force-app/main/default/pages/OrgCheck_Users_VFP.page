<apex:page >
    <apex:composition template="OrgCheck_PageTemplate_VFT">
        <apex:define name="text_page_title">
            Users
        </apex:define>
        <apex:define name="text_page_subtitle">
            Active Users Profile and Permissions Overview
        </apex:define>
        <apex:define name="text_page_description">
            This page lists all your <b>active users</b> in the organization.
            For each one, a <b>badness score</b> is calculated based on the following rules.
            <u>Rule #1:</u> If the user is not using Lightning Experience, then you get +1.
            <u>Rule #2:</u> If the user never logged, , then you get +1.
            By default, the table is ordered by Score descending, in other words the biggest scores come first.
            The "Key Permission" column is focused on important permission such as Api Enabled, View Setup,
            Modify All Data and View All Data.
        </apex:define>
        <apex:define name="html_actions">
        </apex:define>
        <apex:define name="html_content_core">
            <div id="datatable" />
        </apex:define>
        <apex:define name="html_start_definition_script">
            <script>
                function start2(controller, helper) {

                    controller.run({
                        datasets: [ 'users' ],
                        onRecords: function(map) { 

                            helper.html.datatable.create({
                                element: 'datatable',
                                columns: [
                                    { name: 'User Name', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.id, 
                                            '<img src="' + helper.html.render.escape(r.photourl) + '" width="25" /> ' + 
                                                helper.html.render.escape(r.name)
                                        ); 
                                    }},
                                    { name: 'Score', type: 'numeric', property: '##score##' },
                                    { name: 'Last login', 
                                        formula: (r) => { 
                                            return (r.neverLogged === false) ? r.lastLogin : 'Never logged!'; 
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.neverLogged === true) return 1;
                                        }
                                    },
                                    { name: 'Failed logins', type: 'numeric', property: 'numberFailedLogins' },
                                    { name: 'Password change', property: 'lastPasswordChange' },
                                    { name: 'On LEX?', 
                                        formula: (r) => { 
                                            return (r.onLightningExperience === true) ? 'LEX' : 'Classic';
                                        },
                                        scoreFormula: (r) => { 
                                            if (r.onLightningExperience === false) return 1;
                                        }
                                    },
                                    { name: 'Key permissions', formula: (r) => {
                                        let html = '';
                                        if (r.permissions.apiEnabled) html += 'Api Enabled<br />';
                                        if (r.permissions.viewSetup) html += 'View Setup<br />';
                                        if (r.permissions.modifyAllData) html += 'Modify All Data<br />';
                                        if (r.permissions.viewAllData) html += 'View All Data<br />';
                                        return html;
                                    }},
                                    { name: 'Profile Name', formula: (r) => { 
                                        return helper.html.render.link(
                                            '/'+r.profile.id, 
                                            helper.html.render.escape(r.profile.name)
                                        );
                                    }},
                                    { name: 'Permission Set Names', formula: (r) => {
                                        let html = '';
                                        r.permissionSets.forEach(
                                            ps => html += helper.html.render.link(
                                                '/'+ps.id, 
                                                helper.html.render.escape(ps.name)
                                            ) + '<br />'
                                        );
                                        return html;
                                    }}
                                ],
                                data: map.users,
                                sorting: { name: 'Score', order: 'desc' },
                                showSearch: true,
                                showStatistics: true
                            });
                        },
                        actions: { 
                            exportTable: [{
                                table: 'datatable',
                                filename: 'Users'
                            }],
                            clearCache: { 
                                show: true 
                            }
                        }
                    });
                }
            </script>
        </apex:define>
    </apex:composition>
</apex:page>